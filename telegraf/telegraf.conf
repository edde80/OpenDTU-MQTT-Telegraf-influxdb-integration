# This telegraf configuration requires some variables to be set in the environment:
#
#   - INFLUX_URL:    URL of the InfluxDB Server including port, e.g. 'http://influxdb:8086'
#   - INFLUX_ORG:    InfluxDb organisation, e.g. 'my-org'
#   - INFLUX_BUCKET: The InfluxDB bucket to write to, e.g. 'solar/actual'
#   - INFLUX_TOKEN:  Access token to the influxDB bucket (must have write permission)
#
#   - MQTT_URL:      The Url of the MQTT-Server, e.g. 'tcp://mqtt.server.de:1883'
#   - MQTT_USER:     The user name telegraf uses to access the MQTT-Server, e.g. 'telegraf_mqtt_user'
#   - MQTT_PASSWORD  The password used to authenticate with the MQTT-Server e.g. 'bad_password'
#
# The current OpenDTU does not provide its serial, so this needs to be defined as well:
# 
#    - DTU_SERIAL:    The serial number of the DTU as configured / conputed on first start
#
# and of course the base topic configured in the DTU:
# 
#    - DTU_BASE_TOPIC: Thebase topic configured in the DTU, e.g. "solar"
#
# If you do have multiple DTUs running, you have to run two telegraf processes with different
# configuration of the base topic. 

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  omit_hostname = true

[global_tags]
  dtu = "$DTU_SERIAL"

######################################################################################
# Write to the influx2db
######################################################################################
[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB node.
  urls = ["$INFLUX_URL"]

  ## Token for authentication.
  token = "$INFLUX_TOKEN"

  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "$INFLUX_ORG"

  ## Destination bucket to write into.
  bucket = "$INFLUX_BUCKET"


######################################################################################
# Write to stdout (for debugging purposes only)
######################################################################################
# [[outputs.file]]
#   files = ["stdout"]


######################################################################################
# OpenDTU data (string)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/dtu/status",
    "$DTU_BASE_TOPIC/dtu/ip",
    "$DTU_BASE_TOPIC/dtu/hostname"
  ]
  data_format = "value"
  data_type = "string"

  # Measurement name
  name_override = "dtu"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/dtu/+"
    tags  = "_/_/field"
  
######################################################################################
# OpenDTU data (float)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/dtu/rssi",
    "$DTU_BASE_TOPIC/dtu/uptime"
  ]
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "dtu"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/dtu/+"
    tags  = "_/_/field"

######################################################################################
## Totals (AC and DC) per DTU
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/ac/+",
    "$DTU_BASE_TOPIC/dc/+"
  ]
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "dtu_totals"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/+/+"
    tags  = "_/channel/field"

######################################################################################
## Inverter specific topics (strings)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  topics = [
    "$DTU_BASE_TOPIC/+/device/+",
    "$DTU_BASE_TOPIC/+/name"
  ]
  data_format = "value"
  data_type = "string"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter"

  # Set a long interval for this. It doesnot change often
  interval = "10m"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/+/+/+"
    tags  = "_/inverter/_/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/+/name"
    tags  = "_/inverter/field"  

######################################################################################
## Inverter specific topics (float)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

  topics = [
    "$DTU_BASE_TOPIC/+/status/+",
    "$DTU_BASE_TOPIC/+/0/temperature"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/status/+"
    tags  = "_/inverter/_/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/_/field"

######################################################################################
## Inverter totals (float)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  topics = [
    "$DTU_BASE_TOPIC/+/0/powerdc",
    "$DTU_BASE_TOPIC/+/0/current",
    "$DTU_BASE_TOPIC/+/0/frequency",
    "$DTU_BASE_TOPIC/+/0/yieldday",
    "$DTU_BASE_TOPIC/+/0/yieldtotal"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter_totals"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/_/field"

######################################################################################
## Inverter details (float)
######################################################################################    
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

  topics = [
    "$DTU_BASE_TOPIC/+/+/current",
    "$DTU_BASE_TOPIC/+/+/power",
    "$DTU_BASE_TOPIC/+/0/powerfactor",
    "$DTU_BASE_TOPIC/+/0/reactivepower",
    "$DTU_BASE_TOPIC/+/+/voltage",
    "$DTU_BASE_TOPIC/+/+/yieldday",
    "$DTU_BASE_TOPIC/+/+/yieldtotal",
    "$DTU_BASE_TOPIC/+/+/irradiation"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter_details"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/phase/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/1/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/2/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/3/+"
    tags  = "_/inverter/string/field"
  
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/4/+"
    tags  = "_/inverter/string/field"            


######################################################################################
## Inverter details (string)
######################################################################################    
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

  topics = [
    "$DTU_BASE_TOPIC/+/+/name"
  ]
  data_format = "value"
  data_type = "string"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter_details"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/0/+"
    tags  = "_/inverter/phase/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/1/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/2/+"
    tags  = "_/inverter/string/field"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/3/+"
    tags  = "_/inverter/string/field"
  
  [[inputs.mqtt_consumer.topic_parsing]]
    topic =  "$DTU_BASE_TOPIC/+/4/+"
    tags  = "_/inverter/string/field"            

######################################################################################
## Processors to convert current topics to future topic structure
###################################################################################### 

  [[processors.regex]]
    namepass = ["dtu_totals"]

    # Replace "ac" in tag 'channel' with 'AC'
    [[processors.regex.tags]]
      ## Tag to change, "*" will change every tag
      key = "channel"
      pattern = "^ac$"
      replacement = "AC"
    # Replace "dc" in tag 'channel' with 'DC'

    [[processors.regex.tags]]
      ## Tag to change, "*" will change every tag
      key = "channel"
      pattern = "^dc$"
      replacement = "DC"


  [[processors.regex]]
    namepass = ["inverter_totals"]

    # Add tag "channel" with value 'AC' for all fields  ("powerdc" will be overwritten later)
    [[processors.regex.tags]]
      ## Tag to change, "*" will change every tag
      key = "field"
      pattern = "^.*$"
      replacement = "AC"      
      ## Do not replace tag, but create a new one
      result_key = "channel"        

    # Add tag "channel" with value 'DC' for field "powerdc"
    [[processors.regex.tags]]
      ## Tag to change, "*" will change every tag
      key = "field"
      pattern = "powerdc"
      replacement = "DC"      
      result_key = "channel"      

    # Replace tag "field" with value 'power' for field "powerdc"
    [[processors.regex.tags]]
      ## Tag to change, "*" will change every tag
      key = "field"
      pattern = "^powerdc$"
      replacement = "power"       


  [[processors.regex]]
    namepass = ["inverter_details"]    

    # Add tag 'channel' with value 'AC' if value of tag 'phase' is '0'
    [[processors.regex.tags]]
      key = "phase"
      pattern = "^0$"
      replacement = "AC"   
      result_key = "channel"    

    # Change tag 'phase' to value '1' if 'phase' is 0
    [[processors.regex.tags]]
      key = "phase"
      pattern = "^0$"
      replacement = "1"   

    # Add tag 'channel' with value 'DC' if 'string'' is set
    [[processors.regex.tags]]
      key = "string"
      pattern = "^.*$"
      replacement = "DC"   
      result_key = "channel"   


  [[processors.pivot]]
    order = 99
    tag_key = "field"
    value_key = "value"          
