# This telegraf configuration requires some variables to be set in the environment:
#
#   - INFLUX_URL:    URL of the InfluxDB Server including port, e.g. 'http://influxdb:8086'
#   - INFLUX_ORG:    InfluxDb organisation, e.g. 'my-org'
#   - INFLUX_BUCKET: The InfluxDB bucket to write to, e.g. 'solar/actual'
#   - INFLUX_TOKEN:  Access token to the influxDB bucket (must have write permission)
#
#   - MQTT_URL:      The Url of the MQTT-Server, e.g. 'tcp://mqtt.server.de:1883'
#   - MQTT_USER:     The user name telegraf uses to access the MQTT-Server, e.g. 'telegraf_mqtt_user'
#   - MQTT_PASSWORD  The password used to authenticate with the MQTT-Server e.g. 'bad_password'
#
# The current OpenDTU does not provide its serial, so this needs to be defined as well:
# 
#    - DTU_SERIAL:    The serial number of the DTU as configured / conputed on first start
#
# and of course the base topic configured in the DTU:
# 
#    - DTU_BASE_TOPIC: The base topic configured in the DTU, e.g. "solar"
#
# If you do have multiple DTUs running, you have to run two telegraf processes with different
# configuration of the base topic. 

[agent]
  interval = "5s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  omit_hostname = true

[global_tags]
  dtu = "$DTU_SERIAL"

######################################################################################
# Write to the influx2db
######################################################################################
[[outputs.influxdb_v2]]
  ## The URLs of the InfluxDB node.
  urls = ["$INFLUX_URL"]

  ## Token for authentication.
  token = "$INFLUX_TOKEN"

  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "$INFLUX_ORG"

  ## Destination bucket to write into.
  bucket = "$INFLUX_BUCKET"


######################################################################################
# Write to stdout (for debugging purposes only)
######################################################################################
 [[outputs.file]]
   files = ["stdout"]


######################################################################################
# OpenDTU data (string values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/dtu/status",
    "$DTU_BASE_TOPIC/dtu/ip",
    "$DTU_BASE_TOPIC/dtu/hostname"
  ]
  data_format = "value"
  data_type = "string"

  # Measurement name
  name_override = "dtu"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/dtu/+"
    tags  = "_/_/field"
  
######################################################################################
# OpenDTU data (float values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/dtu/rssi",
    "$DTU_BASE_TOPIC/dtu/uptime"
  ]
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "dtu"

  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "$DTU_BASE_TOPIC/dtu/+"
    tags  = "_/_/field"

######################################################################################
## Output (AC) per DTU (float values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/ac/+",
  ]
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "output_per_dtu"

[[inputs.mqtt_consumer.topic_parsing]]
  topic = "$DTU_BASE_TOPIC/+/+"
  tags  = "_/_/field"

######################################################################################
## Input (DC) per DTU (float values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  tagexclude = ["host","topic"]

  ## Topics that will be subscribed to.
  topics = [
    "$DTU_BASE_TOPIC/dc/+"
  ]
  data_format = "value"
  data_type = "float"

  # Measurement name
  name_override = "input_per_dtu"

[[inputs.mqtt_consumer.topic_parsing]]
  topic = "$DTU_BASE_TOPIC/+/+"
  tags  = "_/_/field"    

######################################################################################
## Inverter specific topics (string values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  topics = [
    "$DTU_BASE_TOPIC/+/device/+",
    "$DTU_BASE_TOPIC/+/name"
  ]
  data_format = "value"
  data_type = "string"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter"

  # Set a long interval for this. It does not change often
  interval = "10m"

[[inputs.mqtt_consumer.topic_parsing]]
  topic = "$DTU_BASE_TOPIC/+/+/+"
  tags  = "_/inverter/_/field"

[[inputs.mqtt_consumer.topic_parsing]]
  topic = "$DTU_BASE_TOPIC/+/name"
  tags  = "_/inverter/field"  

######################################################################################
## Inverter specific topics (float values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

  topics = [
    "$DTU_BASE_TOPIC/+/status/+",
    "$DTU_BASE_TOPIC/+/0/temperature"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "inverter"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/status/+"
  tags  = "_/inverter/_/field"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/0/+"
  tags  = "_/inverter/_/field"

######################################################################################
## Output (AC) per inverter (float values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  topics = [
    "$DTU_BASE_TOPIC/+/0/current",    
    "$DTU_BASE_TOPIC/+/0/power",
    "$DTU_BASE_TOPIC/+/0/yieldday",
    "$DTU_BASE_TOPIC/+/0/yieldtotal",
    "$DTU_BASE_TOPIC/+/0/frequency"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "output_per_inverter"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/0/+"
  tags  = "_/inverter/_/field"


######################################################################################
## Input (DC) per inverter (float values)
######################################################################################
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false

  topics = [
    "$DTU_BASE_TOPIC/+/0/powerdc"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "input_per_inverter"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/0/+"
  tags  = "_/inverter/_/field"    

######################################################################################
## Output (AC) values per phase (float values)
######################################################################################    
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

  topics = [
    "$DTU_BASE_TOPIC/+/0/current",
    "$DTU_BASE_TOPIC/+/0/power",
    "$DTU_BASE_TOPIC/+/0/powerfactor",
    "$DTU_BASE_TOPIC/+/0/reactivepower",
    "$DTU_BASE_TOPIC/+/0/voltage",
    "$DTU_BASE_TOPIC/+/0/yieldday",
    "$DTU_BASE_TOPIC/+/0/yieldtotal"
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "output"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/0/+"
  tags  = "_/inverter/phase/field"       

######################################################################################
## Input (DC) values per string (float values)
######################################################################################    
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

  topics = [
    "$DTU_BASE_TOPIC/+/1/current",
    "$DTU_BASE_TOPIC/+/1/voltage",    
    "$DTU_BASE_TOPIC/+/1/power",
    "$DTU_BASE_TOPIC/+/1/irradiation",
    "$DTU_BASE_TOPIC/+/1/yieldday",
    "$DTU_BASE_TOPIC/+/1/yieldtotal",
    "$DTU_BASE_TOPIC/+/2/current",
    "$DTU_BASE_TOPIC/+/2/voltage",       
    "$DTU_BASE_TOPIC/+/2/power",
    "$DTU_BASE_TOPIC/+/2/irradiation",
    "$DTU_BASE_TOPIC/+/2/yieldday",
    "$DTU_BASE_TOPIC/+/2/yieldtotal",
    "$DTU_BASE_TOPIC/+/3/current",
    "$DTU_BASE_TOPIC/+/3/voltage",       
    "$DTU_BASE_TOPIC/+/3/power",
    "$DTU_BASE_TOPIC/+/3/irradiation",  
    "$DTU_BASE_TOPIC/+/3/yieldday",
    "$DTU_BASE_TOPIC/+/3/yieldtotal",  
    "$DTU_BASE_TOPIC/+/4/current",
    "$DTU_BASE_TOPIC/+/4/voltage",       
    "$DTU_BASE_TOPIC/+/4/power",
    "$DTU_BASE_TOPIC/+/4/irradiation",
    "$DTU_BASE_TOPIC/+/4/yieldday",
    "$DTU_BASE_TOPIC/+/4/yieldtotal"                
  ]
  data_format = "value"
  data_type = "float"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "input"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/+/+"
  tags  = "_/inverter/string/field"       

######################################################################################
## Input (DC) values per string (string values)
######################################################################################    
[[inputs.mqtt_consumer]]
  servers = [ "$MQTT_URL" ]
  username = "$MQTT_USER"
  password = "$MQTT_PASSWORD"
  persistent_session = false  

 # The AC output does not have a name in the current OpenDTU, so wie can subscribe to all "channels"
  topics = [
    "$DTU_BASE_TOPIC/+/+/name"   
  ]
  data_format = "value"
  data_type = "string"

  tagexclude = ["host","topic"]

  # Measurement name
  name_override = "input"

[[inputs.mqtt_consumer.topic_parsing]]
  topic =  "$DTU_BASE_TOPIC/+/+/+"
  tags  = "_/inverter/string/field"
       

######################################################################################
## Processors to convert current topics to future topic structure
###################################################################################### 

[[processors.regex]]
  namepass = ["input_per_inverter"]

    # Replace tag "field" with value 'power' for field "powerdc"
    [[processors.regex.tags]]
      ## Tag to change, "*" will change every tag
      key = "field"
      pattern = "^powerdc$"
      replacement = "power"       

[[processors.regex]]
  namepass = ["output"]    

    # Change tag 'phase' to value '1' if 'phase' is 0
    [[processors.regex.tags]]
      key = "phase"
      pattern = "^0$"
      replacement = "1"   

[[processors.pivot]]
  order = 99
  tag_key = "field"
  value_key = "value"          
